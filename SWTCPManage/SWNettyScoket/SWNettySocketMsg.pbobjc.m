// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: CPNettySocket.Msg.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers_RuntimeSupport.h>
#else
 #import "GPBProtocolBuffers_RuntimeSupport.h"
#endif

 #import "SWNettySocketMsg.pbobjc.h"
// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

#pragma mark - CPNettySocketMsgRoot

@implementation SWNettySocketMsgRoot

// No extensions in the file and no imports, so no need to generate
// +extensionRegistry.

@end

#pragma mark - CpnettySocketMsgRoot_FileDescriptor

static GPBFileDescriptor *CpnettySocketMsgRoot_FileDescriptor(void) {
  // This is called by +initialize so there is no need to worry
  // about thread safety of the singleton.
  static GPBFileDescriptor *descriptor = NULL;
  if (!descriptor) {
    GPB_DEBUG_CHECK_RUNTIME_VERSIONS();
    descriptor = [[GPBFileDescriptor alloc] initWithPackage:@""
                                                     syntax:GPBFileSyntaxProto3];
  }
  return descriptor;
}

#pragma mark - Msg

@implementation Msg

@dynamic hasHead, head;
@dynamic body;

typedef struct Msg__storage_ {
  uint32_t _has_storage_[1];
  Head *head;
  NSString *body;
} Msg__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "head",
        .dataTypeSpecific.className = GPBStringifySymbol(Head),
        .number = Msg_FieldNumber_Head,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(Msg__storage_, head),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "body",
        .dataTypeSpecific.className = NULL,
        .number = Msg_FieldNumber_Body,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(Msg__storage_, body),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[Msg class]
                                     rootClass:[SWNettySocketMsgRoot class]
                                          file:CpnettySocketMsgRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(Msg__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - Head

@implementation Head

@dynamic msgId;
@dynamic msgType;
@dynamic msgContentType;
@dynamic fromId;
@dynamic toId;
@dynamic timestamp;
@dynamic statusReport;
@dynamic extend;

typedef struct Head__storage_ {
  uint32_t _has_storage_[1];
  int32_t msgType;
  int32_t msgContentType;
  int32_t statusReport;
  NSString *msgId;
  NSString *fromId;
  NSString *toId;
  NSString *extend;
  int64_t timestamp;
} Head__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "msgId",
        .dataTypeSpecific.className = NULL,
        .number = Head_FieldNumber_MsgId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(Head__storage_, msgId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "msgType",
        .dataTypeSpecific.className = NULL,
        .number = Head_FieldNumber_MsgType,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(Head__storage_, msgType),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "msgContentType",
        .dataTypeSpecific.className = NULL,
        .number = Head_FieldNumber_MsgContentType,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(Head__storage_, msgContentType),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "fromId",
        .dataTypeSpecific.className = NULL,
        .number = Head_FieldNumber_FromId,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(Head__storage_, fromId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "toId",
        .dataTypeSpecific.className = NULL,
        .number = Head_FieldNumber_ToId,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(Head__storage_, toId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "timestamp",
        .dataTypeSpecific.className = NULL,
        .number = Head_FieldNumber_Timestamp,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(Head__storage_, timestamp),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "statusReport",
        .dataTypeSpecific.className = NULL,
        .number = Head_FieldNumber_StatusReport,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(Head__storage_, statusReport),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "extend",
        .dataTypeSpecific.className = NULL,
        .number = Head_FieldNumber_Extend,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(Head__storage_, extend),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[Head class]
                                     rootClass:[SWNettySocketMsgRoot class]
                                          file:CpnettySocketMsgRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(Head__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\006\001\005\000\002\007\000\003\016\000\004\006\000\005\004\000\007\014\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end


#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
